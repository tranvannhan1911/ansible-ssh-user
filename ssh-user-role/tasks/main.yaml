- name: check if user exists
  getent:
    database: passwd
    key: '{{ ssh_username }}'
    fail_key: false
  when: ssh_username is defined

- name: create user if user does not exist
  user:
    name: '{{ ssh_username }}'
    shell: /bin/bash
  when: ssh_username is defined and ssh_username in getent_passwd and getent_passwd['ssh_username'] is not defined
  become: true

- name: query user information
  getent:
    database: passwd
    key: '{{ ssh_username }}'

- name: set home directory for user
  set_fact:
    ssh_home: '{{ getent_passwd[ssh_username][-2] }}'

- name: create .ssh directory
  file:
    path: "{{ ssh_home }}/.ssh"
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: '0700'
    state: directory
  become: true
  become_user: '{{ ssh_username }}'

- name: authorized_keys init
  set_fact:
    ssh_authorized_keys: []
  become: true
  become_user: '{{ ssh_username }}'

- name: Add SSH public key to authorized_keys
  authorized_key:
    user: "{{ ssh_username }}"
    key: "{{ lookup('file', public_key_file) }}"
  become_user: "{{ ssh_username }}"

- name: Add user to sudoers without password prompt
  lineinfile:
    dest: "/etc/sudoers"
    state: present
    regexp: "^{{ ssh_username }} ALL="
    line: "{{ ssh_username }} ALL=(ALL) NOPASSWD:ALL"
    validate: 'visudo -cf %s'
  become: yes
  become_user: root
  when: is_sudo
