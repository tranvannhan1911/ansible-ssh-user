- name: check if user exists
  getent:
    database: passwd
    key: '{{ ssh_username }}'
    fail_key: false
  when: ssh_username is defined

- name: create user if user does not exist
  user:
    name: '{{ ssh_username }}'
    shell: /bin/bash
    expires: "{{ (ssh_user_expiry_date | to_datetime('%Y-%m-%d')).strftime('%s') if ssh_user_expiry_date is defined else omit }}"
  when: ssh_username is defined and ssh_username in getent_passwd and getent_passwd['ssh_username'] is not defined
  become: true

- name: Ensure group exists for the user
  become: true
  group:
    name: "{{ ssh_username }}"
    state: present

- name: query user information
  getent:
    database: passwd
    key: '{{ ssh_username }}'

- name: set home directory for user
  set_fact:
    ssh_home: '{{ getent_passwd[ssh_username][-2] }}'

- name: create .ssh directory
  file:
    path: "{{ ssh_home }}/.ssh"
    owner: "{{ ssh_username }}"
    group: "{{ ssh_username }}"
    mode: '0700'
    state: directory
  become: true
  #  become_user: '{{ ssh_username }}'

- name: Change ownership of .ssh directory
  command: chown {{ ssh_username }}:{{ ssh_username }} {{ ssh_home }}/.ssh
  become: true

- name: authorized_keys init
  set_fact:
    ssh_authorized_keys: []
  become: true
  become_user: '{{ ssh_username }}'

- name: Add SSH public key to authorized_keys
  authorized_key:
    user: "{{ ssh_username }}"
    key: "{{ lookup('file', public_key_file) }}"
  become: true
  #become_user: "{{ ssh_username }}"

- name: Change ownership of authorized_keys
  command: chown {{ ssh_username }}:{{ ssh_username }} {{ ssh_home }}/.ssh/authorized_keys
  become: true


- name: Add user to sudoers without password prompt
  lineinfile:
    dest: "/etc/sudoers"
    state: present
    regexp: "^{{ ssh_username }} ALL="
    line: "{{ ssh_username }} ALL=(ALL) NOPASSWD:ALL"
    validate: 'visudo -cf %s'
  become: yes
  become_user: root
  when: is_sudo

- name: Add user to AllowUsers in SSH config
  when: add_allow_user
  become: true
  block:
  - name: Get current AllowUsers line
    command: grep '^AllowUsers' /etc/ssh/sshd_config
    register: allow_users_line
    failed_when: false  # Không báo lỗi nếu dòng không tồn tại
    changed_when: false # Đảm bảo task này không ghi nhận thay đổi

  - name: Ensure AllowUsers line exists
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowUsers'
      line: 'AllowUsers'
      state: present
      create: yes
    when: not allow_users_line.stdout

  - name: Get current AllowUsers line after add AllowUsers
    command: grep '^AllowUsers' /etc/ssh/sshd_config
    register: allow_users_line
    failed_when: false
    changed_when: false

  - name: debug allow_users_line.stdout
    debug:
      var: allow_users_line.stdout

  - name: Add new user to AllowUsers if not already present
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowUsers'
      line: "{{ allow_users_line.stdout }} {{ ssh_username }}"
      backrefs: yes
    when:
      #      - add_allow_user  # Chỉ chạy nếu add_allow_user = true
      - allow_users_line.stdout is search('(^|\\s){{ ssh_username }}(\\s|$)') == false

  - name: Restart SSH service to apply changes
    service:
      name: sshd
      state: restarted
        #    when: add_allow_user
